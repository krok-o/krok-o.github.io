"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7245:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:5},i="Providers",s={unversionedId:"basic-concepts/providers",id:"basic-concepts/providers",title:"Providers",description:"Providers are the platform that Krok supports such as GitHub, GitLab, Gitea.",source:"@site/docs/basic-concepts/providers.md",sourceDirName:"basic-concepts",slug:"/basic-concepts/providers",permalink:"/docs/basic-concepts/providers",draft:!1,editUrl:"https://github.com/krok-o/docs/tree/main/packages/create-docusaurus/templates/shared/docs/basic-concepts/providers.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/basic-concepts/events"},next:{title:"Welcome to Krok",permalink:"/docs/intro"}},c={},p=[{value:"Providers in Commands",id:"providers-in-commands",level:2},{value:"Providers in Repositories",id:"providers-in-repositories",level:2}],l={toc:p};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"providers"},"Providers"),(0,o.kt)("p",null,"Providers are the platform that Krok supports such as GitHub, GitLab, Gitea."),(0,o.kt)("h2",{id:"providers-in-commands"},"Providers in Commands"),(0,o.kt)("p",null,"To be truly provider agnostic, the commands that Krok runs also must support multiple providers. After all, all\nproviders have different ways of doing things. A command can choose to only support a single provider."),(0,o.kt)("p",null,"The platform is passed in as a parameter so the command can decide what to do based on that. For example, call a\ndifferent implementation."),(0,o.kt)("h2",{id:"providers-in-repositories"},"Providers in Repositories"),(0,o.kt)("p",null,"Repositories need to define which provider they are locate on like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"platform: github\n")),(0,o.kt)("p",null,"This is needed in order for the operator to know how to create a Hook on the platform. What endpoint to call, etc.\nFor this to work, a single Secret must be defined which contains a token for said provider such as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: github-token\n  namespace: krok-system\ndata:\n  token: c2VjcmV0\n")),(0,o.kt)("p",null,"This must be defined in the Repository settings like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  providerTokenSecretRef:\n    name: github-token\n    namespace: krok-system\n")))}d.isMDXComponent=!0}}]);