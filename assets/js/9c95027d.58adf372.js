"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[121],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>k});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,k=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(k,s(s({ref:t},l),{},{components:r})):n.createElement(k,s({ref:t},l))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2958:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:2},s="Repositories",i={unversionedId:"basic-concepts/repositories",id:"basic-concepts/repositories",title:"Repositories",description:"Repositories are the first, main building block of Krok.",source:"@site/docs/basic-concepts/repositories.md",sourceDirName:"basic-concepts",slug:"/basic-concepts/repositories",permalink:"/docs/basic-concepts/repositories",draft:!1,editUrl:"https://github.com/krok-o/docs/tree/main/packages/create-docusaurus/templates/shared/docs/basic-concepts/repositories.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Basic Concepts",permalink:"/docs/basic-concepts/basics"},next:{title:"Commands",permalink:"/docs/basic-concepts/commands"}},c={},p=[{value:"What are Repositories",id:"what-are-repositories",level:2},{value:"Creating a repository",id:"creating-a-repository",level:2}],l={toc:p};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"repositories"},"Repositories"),(0,o.kt)("p",null,"Repositories are the first, main building block of Krok."),(0,o.kt)("h2",{id:"what-are-repositories"},"What are Repositories"),(0,o.kt)("p",null,"Repositories are the repositories on any supported ",(0,o.kt)("a",{parentName:"p",href:"/docs/basic-concepts/providers"},"provider"),". For example, a repository on GitHub.\nOnce a user configures one in Krok, more about that in ",(0,o.kt)("a",{parentName:"p",href:"#creating-a-repository"},"creating a repository"),", Krok\nwill go ahead and create a WebHook for the requested events such as ",(0,o.kt)("inlineCode",{parentName:"p"},"push"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"pull")," etc."),(0,o.kt)("p",null,"Once a hook is successfully set up, Krok will listen for those events under a custom URL and run the configured\n",(0,o.kt)("a",{parentName:"p",href:"/docs/basic-concepts/commands"},"commands"),". For example, let's suppose the user has a requirement that every repository must send a Slack message\nafter certain events into a specific channel of a company Slack space."),(0,o.kt)("p",null,"The user would configure the repositories to run this specific command on each subscribed event. But let's see some\nconcrete configuration files."),(0,o.kt)("h2",{id:"creating-a-repository"},"Creating a repository"),(0,o.kt)("p",null,"A sample repository setting for ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Skarlso/test"},"this")," GitHub repository could look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: delivery.krok.app/v1alpha1\nkind: KrokRepository\nmetadata:\n  name: repository-sample\n  namespace: krok-system\nspec:\n  authSecretRef:\n    name: repository-sample-secret\n    namespace: krok-system\n  providerTokenSecretRef:\n    name: github-secret\n    namespace: krok-system\n  platform: github\n  url: "https://github.com/Skarlso/test"\n  events:\n    - push\n  commands:\n    - namespace: krok-system\n      name: input-command\n    - namespace: krok-system\n      name: output-command\n')),(0,o.kt)("p",null,"Let's break this down what each of these values do."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"  authSecretRef:\n    name: repository-sample-secret\n    namespace: krok-system\n")),(0,o.kt)("p",null,"Authentication secret contains auth information on how to check out the code. This could a private key, or a token or a\npassword. Anything that the respective platform requires. For example, something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: Secret\ntype: Opaque\nmetadata:\n  name: repository-sample-secret\n  namespace: krok-system\ndata:\n  secret: c2VjcmV0\n  username: dXNlcm5hbWU=\n  password: dG9rZW4=\n\n")),(0,o.kt)("p",null,"Username and password are a GitHub token and a user. The ",(0,o.kt)("inlineCode",{parentName:"p"},"secret")," value is used to create the hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"  providerTokenSecretRef:\n    name: github-secret\n    namespace: krok-system\n")),(0,o.kt)("p",null,"The provider token allows Krok to access the provider's API to create the hook."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'  platform: github\n  url: "https://github.com/Skarlso/test"\n  events:\n    - push\n')),(0,o.kt)("p",null,"These are the configured platform of this repository, the url where it is located at and the subscribed events the hook\nshould listen on."),(0,o.kt)("p",null,"And last but not least, a list of command object references:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"  commands:\n    - namespace: krok-system\n      name: input-command\n    - namespace: krok-system\n      name: output-command\n")),(0,o.kt)("p",null,"These are commands that already exist in the cluster. ",(0,o.kt)("em",{parentName:"p"},"Continue")," to read more about commands."))}m.isMDXComponent=!0}}]);