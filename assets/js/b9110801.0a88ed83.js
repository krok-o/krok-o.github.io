"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[593],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||s;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:o,i[1]=a;for(var p=2;p<s;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7882:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:4},i="Events",a={unversionedId:"basic-concepts/events",id:"basic-concepts/events",title:"Events",description:"Events come from providers. For example, push event from GitHub or GitLab. These are passed on to commands as they are",source:"@site/docs/basic-concepts/events.md",sourceDirName:"basic-concepts",slug:"/basic-concepts/events",permalink:"/docs/basic-concepts/events",draft:!1,editUrl:"https://github.com/krok-o/docs/tree/main/packages/create-docusaurus/templates/shared/docs/basic-concepts/events.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/docs/basic-concepts/commands"},next:{title:"Providers",permalink:"/docs/basic-concepts/providers"}},c={},p=[{value:"Subscribe to Events",id:"subscribe-to-events",level:2},{value:"How to find out what&#39;s going on",id:"how-to-find-out-whats-going-on",level:2},{value:"Getting pod logs",id:"getting-pod-logs",level:2}],l={toc:p};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"events"},"Events"),(0,o.kt)("p",null,"Events come from providers. For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"push")," event from GitHub or GitLab. These are passed on to commands as they are\nnamed and received from the provider. For example, this would be ",(0,o.kt)("inlineCode",{parentName:"p"},"issue_comment")," in case of GitHub but would be ",(0,o.kt)("inlineCode",{parentName:"p"},"note"),"\nevent type in case of GitLab. It's up to the command to differentiate between them and act accordingly."),(0,o.kt)("h2",{id:"subscribe-to-events"},"Subscribe to Events"),(0,o.kt)("p",null,"When a Repository is created it can list what types of events it Subscribes to."),(0,o.kt)("h2",{id:"how-to-find-out-whats-going-on"},"How to find out what's going on"),(0,o.kt)("p",null,"To track what events occurred for a Repository, inspect the Repository Kubernetes object's ",(0,o.kt)("inlineCode",{parentName:"p"},"Status")," field.\nIt should contain a list of Events that occurred for it."),(0,o.kt)("h2",{id:"getting-pod-logs"},"Getting pod logs"))}u.isMDXComponent=!0}}]);